<?xml version="1.0"?>
<!--
  FH-Joanneum SWD12 practical software engeneering project.
  Maven build file.
-->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" 
          xmlns="http://maven.apache.org/POM/4.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>at.fhj.swd</groupId>
  <artifactId>fhj-ws2014-sd12-pse</artifactId>
  <version>1.2</version>
  <packaging>war</packaging>
  <name>SWD12 PSE Project</name>
  <url>https://code.google.com/p/fhj-ws2014-sd12-pse</url>
  <description>FH-Joanneum SWD12 practical software engeneering project.</description>
  
  <!-- TODO: Choose a license! -->
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <distribution>repo</distribution>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
    </license>
  </licenses>
  
  <properties>
    <!-- 
      Explicitly declaring the source encoding eliminates the following message: 
      [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, 
      i.e. build is platform dependent! 
    -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <!-- Properties for all used dependency versions. -->
    
    <!-- Define the version of the JBoss - Wildfly BOMs we want to import to specify tested stacks. --> 
    <version.jboss.bom>1.0.0.Final</version.jboss.bom>
    <version.wildfly.bom>8.1.0.Final</version.wildfly.bom>    
    
    <!-- Plugin versions -->
    <version.war.plugin>2.1.1</version.war.plugin>
    <version.wildfly.plugin>1.0.2.Final</version.wildfly.plugin>
    <version.compiler.plugin>3.1</version.compiler.plugin>    
    
    <!-- Maven compiler plugin -->
    <maven.compiler.target>1.7</maven.compiler.target>
    <maven.compiler.source>1.7</maven.compiler.source>
    
    <!-- Dependency versions not covered by BOM -->
    <version.jsf>2.1.29.Final</version.jsf>    
    <version.junit>4.11</version.junit>        
    
  </properties>
  
  <!-- Set the JBoss reporsitory to get matching dependencies. -->
  <repositories>
    <repository>
      <id>JBoss Repository</id>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
    </repository>
    
   	<repository>
			<id>primefaces-repository</id>
			<name>Primefaces repository</name>
			<url>http://repository.primefaces.org</url>
		</repository>
  </repositories>
  
  <dependencyManagement>
    <dependencies>
    
      <!-- 
        JBoss distributes a complete set of Java EE 7 APIs including 
        a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or 
        a collection) of artifacts. We use this here so that we always get the correct 
        versions of artifacts. Here we use the jboss-javaee-7.0-with-hibernate stack. 
      -->
      
      <!-- LOG4J Logging Framework -->
      <dependency>
 		<groupId>log4j</groupId>
 		<artifactId>log4j</artifactId>
 		<version>1.2.17</version>
	  </dependency>
            
      <!-- Hybernate included BOM. -->      
      <dependency>
        <groupId>org.wildfly.bom</groupId>
        <artifactId>jboss-javaee-7.0-with-hibernate</artifactId>
        <version>${version.wildfly.bom}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>  
    </dependencies>
  </dependencyManagement>
  
  <!-- Note: Provided scope is used because the dependency is included in JBoss. -->
  <dependencies>
  
    <!-- BOM dependencies need no version declaration. -->
    
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-ejb-client</artifactId>
			<scope>runtime</scope>
			<version>2.0.1.Final</version>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-api</artifactId>
			<scope>runtime</scope>
			<version>3.3.0.Final</version>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-nio</artifactId>
			<scope>runtime</scope>
			<version>3.3.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.remoting</groupId>
			<artifactId>jboss-remoting</artifactId>
			<scope>runtime</scope>
			<version>4.0.3.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.sasl</groupId>
			<artifactId>jboss-sasl</artifactId>
			<scope>runtime</scope>
			<version>1.0.4.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling-river</artifactId>
			<scope>runtime</scope>
			<version>1.4.9.Final</version>
		</dependency>

    
    <!-- Import the CDI API. -->
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Import the common annotations API (JSR-250). -->
    <dependency>
      <groupId>org.jboss.spec.javax.annotation</groupId>
      <artifactId>jboss-annotations-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Import the servlet API. -->
    <dependency> 
      <groupId>org.jboss.spec.javax.servlet</groupId> 
      <artifactId>jboss-servlet-api_3.1_spec</artifactId> 
      <scope>provided</scope> 
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.1-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>provided</scope>
    </dependency>        

    <!-- JSR-303 (Bean Validation) implementation provides portable constraints such as @Email. -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Dependencies which need a version because they are not handeled by the BOM. -->
    
    <dependency>
      <groupId>org.jboss.spec.javax.faces</groupId>
      <artifactId>jboss-jsf-api_2.1_spec</artifactId>
      <version>${version.jsf}</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>
    
	 	<!-- Primefaces -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>5.1</version>
		</dependency>
		
		<!-- Jboss security called picketbox. -->
		<dependency>
		  <groupId>org.picketbox</groupId>
		  <artifactId>picketbox</artifactId>
		  <version>4.0.19.Final</version>
		  <scope>provided</scope>
		</dependency>

		<!-- Selenium -->
  		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.44.0</version>
		</dependency>
  </dependencies>
  
  <build>
  
    <!-- Maven will append the version to the finalName. -->
    <finalName>${project.artifactId}</finalName>
    
    <plugins>
    
    	<plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${version.war.plugin}</version>
        <configuration>
        	<!-- Java EE 7 doesn't require web.xml, maven needs to catch up! -->
        	<webXml>src\main\webapp\WEB-INF\web.xml</webXml>
          <!--<failOnMissingWebXml>false</failOnMissingWebXml>-->
        </configuration>
      </plugin>
      
      <!-- 
        The JBoss AS plugin deploys your war to a local JBoss EAP container.
        To use, set the JBOSS_HOME environment variable and run: 
        mvn package wildfly:deploy 
      -->
      <plugin>
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <version>${version.wildfly.plugin}</version>
        
        <!-- Further configurations are made by cli files. -->
        <configuration>
          <hostname>127.0.0.1</hostname>
          <port>9990</port>
          <username>swd12</username>
          <password>fhj</password>
          <!-- In case you want to use a custom server configuration define it here. -->
          <server-config>standalone.xml</server-config>
        </configuration>
        
        <!-- 
          H2 Datasource configuration example for goal "add-resource".
          See: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/add-resource-example.html
          for further informations. 
        -->
        <!--
        <executions>
          <execution>
            <id>add-datasource</id>
            <phase>package</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <address>subsystem=datasources,data-source=java:jboss/myDs</address>
              <resources>
                <resource>
                  <properties>
                    <jndi-name>java:jboss/myDs</jndi-name>
                    <enabled>true</enabled>
                    <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</connection-url>
                    <driver-class>org.h2.Driver</driver-class>
                    <driver-name>h2</driver-name>
                    <user-name>sa</user-name>
                    <password>sa</password>
                  </properties>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions> 
        -->   
                
      </plugin>
      
      <!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
      
      
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18</version>
          <configuration>
	          <skipTests>true</skipTests>
	        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.18</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    
  </build>

</project>